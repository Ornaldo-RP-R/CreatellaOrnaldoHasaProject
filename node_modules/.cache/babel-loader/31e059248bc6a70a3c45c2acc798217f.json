{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asjan\\\\Desktop\\\\Creatella\\\\src\\\\App.jsx\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { connect } from \"react-redux\";\nimport { setFullArrayOfProducts, setDisplayedArrayOfProducts } from \"./redux/Shop/Shop.actions\";\nimport { toggleSpinner } from \"./redux/Spinner/Spinner.actions\";\nimport Spinner from \"./components/Spinner/spinner.component\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.AxiosCall = async () => {\n      await this.props.toggleSpinner();\n      await axios.get(\"http://localhost:5000/products\").then(response => {\n        this.props.setFullArrayOfProducts(response.data);\n        this.props.setDisplayedArrayOfProducts(response.data.slice(0, 20));\n      });\n      await this.props.toggleSpinner();\n    };\n\n    this.handleScroll = event => {\n      let scrollTop = event.srcElement.body.scrollTop,\n          itemTranslate = Math.min(0, scrollTop / 3 - 60);\n      this.setState({\n        transform: itemTranslate\n      });\n    };\n\n    this.state = {\n      transform: 1\n    };\n  }\n\n  findCorrectDateFormat(productDate) {\n    let now = new Date();\n    let date = \"\";\n\n    if (now.getFullYear() === productDate.getFullYear() && now.getMonth() === productDate.getMonth() && now.getDate() - productDate.getDate() >= 7) {\n      if (now.getDate() - productDate.getDate() === 0) {\n        if (now.getHours() - productDate.getHours() === 0) {\n          if (now.getMinutes() - productDate.getMinutes() === 0) {\n            if (now.getSeconds() - productDate.getSeconds() != 0) {\n              return date = `${now.getSeconds() - productDate.getSeconds()} minutes ago`;\n            }\n          } else {\n            return date = `${now.getMinutes() - productDate.getMinutes()} minutes ago`;\n          }\n        } else {\n          return date = `${now.getHours() - productDate.getHours()} hours ago`;\n        }\n      } else {\n        return date = `${now.getDate() - productDate.getDate()} days ago`;\n      }\n    } else {\n      return date = productDate.toString();\n    }\n\n    return date;\n  }\n\n  componentDidMount() {\n    this.AxiosCall();\n    window.addEventListener(\"scroll\", this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.handleScroll);\n  }\n\n  render() {\n    const {\n      DisplayedProductsArray,\n      SpinnerVissibility\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Products\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, SpinnerVissibility === true ? /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }) : DisplayedProductsArray.map(Product => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: Product.id,\n        className: \"Each-Product\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontSize: `${Product.size}px`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, Product.face), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }\n      }, `$ ${Product.price}`), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }, `${this.findCorrectDateFormat(new Date(Product.date))}`));\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, this.state.transform));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  DisplayedProductsArray: state.shop.DisplayedProductsArray,\n  SpinnerVissibility: state.spinner.SpinnerVissibility\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setFullArrayOfProducts: FullArrayOfProducts => dispatch(setFullArrayOfProducts(FullArrayOfProducts)),\n  setDisplayedArrayOfProducts: DisplayedArrayOfProducts => dispatch(setDisplayedArrayOfProducts(DisplayedArrayOfProducts)),\n  toggleSpinner: () => dispatch(toggleSpinner())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/asjan/Desktop/Creatella/src/App.jsx"],"names":["React","axios","connect","setFullArrayOfProducts","setDisplayedArrayOfProducts","toggleSpinner","Spinner","App","Component","constructor","props","AxiosCall","get","then","response","data","slice","handleScroll","event","scrollTop","srcElement","body","itemTranslate","Math","min","setState","transform","state","findCorrectDateFormat","productDate","now","Date","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","toString","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","render","DisplayedProductsArray","SpinnerVissibility","map","Product","id","fontSize","size","face","price","mapStateToProps","shop","spinner","mapDispatchToProps","dispatch","FullArrayOfProducts","DisplayedArrayOfProducts"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./App.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setFullArrayOfProducts,\r\n  setDisplayedArrayOfProducts,\r\n} from \"./redux/Shop/Shop.actions\";\r\nimport { toggleSpinner } from \"./redux/Spinner/Spinner.actions\";\r\nimport Spinner from \"./components/Spinner/spinner.component\";\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      transform: 1,\r\n    };\r\n  }\r\n\r\n  findCorrectDateFormat(productDate) {\r\n    let now = new Date();\r\n    let date = \"\";\r\n    if (\r\n      now.getFullYear() === productDate.getFullYear() &&\r\n      now.getMonth() === productDate.getMonth() &&\r\n      now.getDate() - productDate.getDate() >= 7\r\n    ) {\r\n      if (now.getDate() - productDate.getDate() === 0) {\r\n        if (now.getHours() - productDate.getHours() === 0) {\r\n          if (now.getMinutes() - productDate.getMinutes() === 0) {\r\n            if (now.getSeconds() - productDate.getSeconds() != 0) {\r\n              return (date = `${\r\n                now.getSeconds() - productDate.getSeconds()\r\n              } minutes ago`);\r\n            }\r\n          } else {\r\n            return (date = `${\r\n              now.getMinutes() - productDate.getMinutes()\r\n            } minutes ago`);\r\n          }\r\n        } else {\r\n          return (date = `${\r\n            now.getHours() - productDate.getHours()\r\n          } hours ago`);\r\n        }\r\n      } else {\r\n        return (date = `${now.getDate() - productDate.getDate()} days ago`);\r\n      }\r\n    } else {\r\n      return (date = productDate.toString());\r\n    }\r\n    return date;\r\n  }\r\n  AxiosCall = async () => {\r\n    await this.props.toggleSpinner();\r\n    await axios.get(\"http://localhost:5000/products\").then((response) => {\r\n      this.props.setFullArrayOfProducts(response.data);\r\n      this.props.setDisplayedArrayOfProducts(response.data.slice(0, 20));\r\n    });\r\n    await this.props.toggleSpinner();\r\n  };\r\n  componentDidMount() {\r\n    this.AxiosCall();\r\n    window.addEventListener(\"scroll\", this.handleScroll);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"scroll\", this.handleScroll);\r\n  }\r\n  handleScroll = (event) => {\r\n    let scrollTop = event.srcElement.body.scrollTop,\r\n      itemTranslate = Math.min(0, scrollTop / 3 - 60);\r\n\r\n    this.setState({\r\n      transform: itemTranslate,\r\n    });\r\n  };\r\n  render() {\r\n    const { DisplayedProductsArray, SpinnerVissibility } = this.props;\r\n    return (\r\n      <div className=\"Products\">\r\n        {SpinnerVissibility === true ? (\r\n          <Spinner></Spinner>\r\n        ) : (\r\n          DisplayedProductsArray.map((Product) => {\r\n            return (\r\n              <div id={Product.id} className=\"Each-Product\">\r\n                <span style={{ fontSize: `${Product.size}px` }}>\r\n                  {Product.face}\r\n                </span>\r\n                <div>{`$ ${Product.price}`}</div>\r\n                <div>{`${this.findCorrectDateFormat(\r\n                  new Date(Product.date)\r\n                )}`}</div>\r\n              </div>\r\n            );\r\n          })\r\n        )}\r\n        <div>{this.state.transform}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  DisplayedProductsArray: state.shop.DisplayedProductsArray,\r\n  SpinnerVissibility: state.spinner.SpinnerVissibility,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setFullArrayOfProducts: (FullArrayOfProducts) =>\r\n    dispatch(setFullArrayOfProducts(FullArrayOfProducts)),\r\n  setDisplayedArrayOfProducts: (DisplayedArrayOfProducts) =>\r\n    dispatch(setDisplayedArrayOfProducts(DisplayedArrayOfProducts)),\r\n  toggleSpinner: () => dispatch(toggleSpinner()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n"]},"metadata":{},"sourceType":"module"}