{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asjan\\\\Desktop\\\\Creatella\\\\src\\\\components\\\\Product\\\\Product.component.jsx\";\nimport React from \"react\";\nimport \"./Product.styles.css\"; // Find Date format if 1week or less ex:\"2 days ago\"\n//otherwise i let full date YY/MM/DD more confortable for human eye otherwise i could do a .toString for fully date\n\nconst findCorrectDateFormat = productDate => {\n  let now = new Date();\n  let date = \"\"; //Make first check foramt of 1week or less from today's date\n\n  if (now.getFullYear() === productDate.getFullYear() && now.getMonth() === productDate.getMonth() && now.getDate() - productDate.getDate() >= 7) {\n    //make small checks if is day ago/minutes/hours\n    if (now.getDate() - productDate.getDate() === 0) {\n      if (now.getHours() - productDate.getHours() === 0) {\n        if (now.getMinutes() - productDate.getMinutes() === 0) {\n          if (now.getSeconds() - productDate.getSeconds() !== 0) {\n            return date = `${now.getSeconds() - productDate.getSeconds()} minutes ago`;\n          }\n        } else {\n          return date = `${now.getMinutes() - productDate.getMinutes()} minutes ago`;\n        }\n      } else {\n        return date = `${now.getHours() - productDate.getHours()} hours ago`;\n      }\n    } else {\n      return date = `${now.getDate() - productDate.getDate()} days ago`;\n    }\n  } else {\n    //otherwise full date format\n    return date = \"since \" + productDate.getFullYear() + \"/\" + productDate.getMonth() + \"/\" + productDate.getDate();\n  }\n\n  return date;\n};\n\nconst SaveToCard = (product, setValueByName, ItemsofCart) => {\n  setValueByName({\n    name: \"ItemsOfCard\",\n    value: ItemsofCart.length = 0 ? [product] : [...ItemsofCart, product]\n  });\n};\n\nconst ProductCard = ({\n  setValueByName,\n  id,\n  price,\n  size,\n  face,\n  date,\n  AddsIndexes,\n  ProductsCount,\n  AdsVisibility,\n  ItemsofCart\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  id: id,\n  className: \"Each-Product\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  className: \"face\",\n  style: {\n    fontSize: `${size}px`\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 7\n  }\n}, face), /*#__PURE__*/React.createElement(\"button\", {\n  className: \"OrderNow\",\n  onClick: () => {\n    SaveToCard({\n      id,\n      price,\n      size,\n      face,\n      date\n    }, setValueByName, ItemsofCart);\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 7\n  }\n}, \"Add To Cart\"), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"price\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 7\n  }\n}, \"$\", /*#__PURE__*/React.createElement(\"span\", {\n  style: {\n    color: \"black\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 10\n  }\n}, ` ${price}`)), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"date\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 7\n  }\n}, `${findCorrectDateFormat(new Date(date))}`)), AdsVisibility === true ? /*#__PURE__*/React.createElement(\"div\", {\n  className: \"advertisment\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"img\", {\n  className: \"ad\",\n  alt: \"Loading\",\n  src: `http://localhost:5000/ads?r=${AddsIndexes[ProductsCount / 20]}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }\n})) : null);\n\nexport default ProductCard;","map":{"version":3,"sources":["C:/Users/asjan/Desktop/Creatella/src/components/Product/Product.component.jsx"],"names":["React","findCorrectDateFormat","productDate","now","Date","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","SaveToCard","product","setValueByName","ItemsofCart","name","value","length","ProductCard","id","price","size","face","AddsIndexes","ProductsCount","AdsVisibility","fontSize","color"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./Product.styles.css\";\r\n// Find Date format if 1week or less ex:\"2 days ago\"\r\n//otherwise i let full date YY/MM/DD more confortable for human eye otherwise i could do a .toString for fully date\r\nconst findCorrectDateFormat = (productDate) => {\r\n  let now = new Date();\r\n  let date = \"\";\r\n  //Make first check foramt of 1week or less from today's date\r\n  if (\r\n    now.getFullYear() === productDate.getFullYear() &&\r\n    now.getMonth() === productDate.getMonth() &&\r\n    now.getDate() - productDate.getDate() >= 7\r\n  ) {\r\n    //make small checks if is day ago/minutes/hours\r\n    if (now.getDate() - productDate.getDate() === 0) {\r\n      if (now.getHours() - productDate.getHours() === 0) {\r\n        if (now.getMinutes() - productDate.getMinutes() === 0) {\r\n          if (now.getSeconds() - productDate.getSeconds() !== 0) {\r\n            return (date = `${\r\n              now.getSeconds() - productDate.getSeconds()\r\n            } minutes ago`);\r\n          }\r\n        } else {\r\n          return (date = `${\r\n            now.getMinutes() - productDate.getMinutes()\r\n          } minutes ago`);\r\n        }\r\n      } else {\r\n        return (date = `${now.getHours() - productDate.getHours()} hours ago`);\r\n      }\r\n    } else {\r\n      return (date = `${now.getDate() - productDate.getDate()} days ago`);\r\n    }\r\n  } else {\r\n    //otherwise full date format\r\n    return (date =\r\n      \"since \" +\r\n      productDate.getFullYear() +\r\n      \"/\" +\r\n      productDate.getMonth() +\r\n      \"/\" +\r\n      productDate.getDate());\r\n  }\r\n  return date;\r\n};\r\nconst SaveToCard = (product, setValueByName, ItemsofCart) => {\r\n  setValueByName({\r\n    name: \"ItemsOfCard\",\r\n    value: (ItemsofCart.length = 0 ? [product] : [...ItemsofCart, product]),\r\n  });\r\n};\r\nconst ProductCard = ({\r\n  setValueByName,\r\n  id,\r\n  price,\r\n  size,\r\n  face,\r\n  date,\r\n  AddsIndexes,\r\n  ProductsCount,\r\n  AdsVisibility,\r\n  ItemsofCart,\r\n}) => (\r\n  <div>\r\n    <div id={id} className=\"Each-Product\">\r\n      <span className=\"face\" style={{ fontSize: `${size}px` }}>\r\n        {face}\r\n      </span>\r\n      <button\r\n        className=\"OrderNow\"\r\n        onClick={() => {\r\n          SaveToCard(\r\n            {\r\n              id,\r\n              price,\r\n              size,\r\n              face,\r\n              date,\r\n            },\r\n            setValueByName,\r\n            ItemsofCart\r\n          );\r\n        }}\r\n      >\r\n        Add To Cart\r\n      </button>\r\n      <div className=\"price\">\r\n        $<span style={{ color: \"black\" }}>{` ${price}`}</span>\r\n      </div>\r\n      <div className=\"date\">{`${findCorrectDateFormat(new Date(date))}`}</div>\r\n    </div>\r\n    {AdsVisibility === true ? (\r\n      <div className=\"advertisment\">\r\n        <img\r\n          className=\"ad\"\r\n          alt=\"Loading\"\r\n          src={`http://localhost:5000/ads?r=${AddsIndexes[ProductsCount / 20]}`}\r\n        />\r\n      </div>\r\n    ) : null}\r\n  </div>\r\n);\r\nexport default ProductCard;\r\n"]},"metadata":{},"sourceType":"module"}