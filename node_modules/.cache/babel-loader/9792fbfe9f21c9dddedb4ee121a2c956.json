{"ast":null,"code":"//This folder helps me for making non errors on Api call\nimport AxiosCall from \"./AxiosCall\"; // ContrFunc object helps me to keep instances of functions or controls name used by backend functions\n\nexport const ContrFunc = {\n  Controllers: {},\n  Functions: {\n    products: \"products\",\n    ads: \"ads\"\n  }\n}; // I dont use directly axios.finction(get) but i make my own function in order if i need spinner and some aditional attributes that helps me and organize my work\n\nexport const getData = async (functionname, spinnerFunct, parameters) => {\n  if (spinnerFunct !== null) {\n    spinnerFunct();\n  }\n\n  let response = await AxiosCall.get(`/${functionname}`, parameters ? {\n    params: { ...parameters\n    }\n  } : null);\n  return response;\n};","map":{"version":3,"sources":["C:/Users/asjan/Desktop/Creatella/src/api/AxiosHelperFunctions.js"],"names":["AxiosCall","ContrFunc","Controllers","Functions","products","ads","getData","functionname","spinnerFunct","parameters","response","get","params"],"mappings":"AAAA;AACA,OAAOA,SAAP,MAAsB,aAAtB,C,CACA;;AACA,OAAO,MAAMC,SAAS,GAAG;AACvBC,EAAAA,WAAW,EAAE,EADU;AAEvBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE,UADD;AAETC,IAAAA,GAAG,EAAE;AAFI;AAFY,CAAlB,C,CAOP;;AACA,OAAO,MAAMC,OAAO,GAAG,OAAOC,YAAP,EAAqBC,YAArB,EAAmCC,UAAnC,KAAkD;AACvE,MAAID,YAAY,KAAK,IAArB,EAA2B;AACzBA,IAAAA,YAAY;AACb;;AACD,MAAIE,QAAQ,GAAG,MAAMV,SAAS,CAACW,GAAV,CAClB,IAAGJ,YAAa,EADE,EAEnBE,UAAU,GACN;AACEG,IAAAA,MAAM,EAAE,EACN,GAAGH;AADG;AADV,GADM,GAMN,IARe,CAArB;AAUA,SAAOC,QAAP;AACD,CAfM","sourcesContent":["//This folder helps me for making non errors on Api call\r\nimport AxiosCall from \"./AxiosCall\";\r\n// ContrFunc object helps me to keep instances of functions or controls name used by backend functions\r\nexport const ContrFunc = {\r\n  Controllers: {},\r\n  Functions: {\r\n    products: \"products\",\r\n    ads: \"ads\",\r\n  },\r\n};\r\n// I dont use directly axios.finction(get) but i make my own function in order if i need spinner and some aditional attributes that helps me and organize my work\r\nexport const getData = async (functionname, spinnerFunct, parameters) => {\r\n  if (spinnerFunct !== null) {\r\n    spinnerFunct();\r\n  }\r\n  let response = await AxiosCall.get(\r\n    `/${functionname}`,\r\n    parameters\r\n      ? {\r\n          params: {\r\n            ...parameters,\r\n          },\r\n        }\r\n      : null\r\n  );\r\n  return response;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}