{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asjan\\\\Desktop\\\\Creatella\\\\src\\\\components\\\\Filter\\\\Filter.component.jsx\";\nimport React, { useState } from \"react\";\nimport \"./Filter.styles.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFilter } from \"@fortawesome/free-solid-svg-icons\";\nimport Sort from \"../Sort/Sort.component\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { setFullArrayOfProducts, setDisplayedArrayOfProducts, setValueByName } from \"../../redux/Shop/Shop.actions\";\nimport { toggleSpinner } from \"../../redux/Spinner/Spinner.actions\";\n\nconst Filter = ({\n  setFullArrayOfProducts,\n  setDisplayedArrayOfProducts,\n  setValueByName,\n  toggleSpinner\n}) => {\n  const [FilterState, setFilterState] = useState(false);\n  const [SizeSort, setSizeSort] = useState(false);\n  const [PrizeSort, setPrizeSort] = useState(false);\n  const [IdSort, setIdSort] = useState(false);\n\n  const AxiosRequest = async ItemToSort => {\n    await toggleSpinner();\n    await getData(ContrFunc.Functions.products, this.props.toggleSpinner, {\n      _sort: ItemToSort,\n      _limit: 80\n    }).then(response => {\n      setFullArrayOfProducts(response.data);\n      setDisplayedArrayOfProducts(response.data.slice(0, 20));\n      setValueByName({\n        name: \"Index\",\n        value: 20\n      });\n      setValueByName({\n        name: \"LoadingMore\",\n        value: false\n      });\n    });\n    await toggleSpinner();\n    await getData(ContrFunc.Functions.products, this.props.toggleSpinner, {\n      _sort: ItemToSort\n    }).then(response => {\n      setFullArrayOfProducts(response.data);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, FilterState === false ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Filtering\",\n    onClick: () => setFilterState(!FilterState),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Filters\", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faFilter,\n    className: \"icon\",\n    color: \"#413b3b\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Filtering\",\n    onClick: () => setFilterState(!FilterState),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Filters\", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faFilter,\n    className: \"icon\",\n    color: \"#413b3b\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"SortOption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"1.4vw\",\n      margin: \"1vh 1vw\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, \"Sort by: \")), /*#__PURE__*/React.createElement(Sort, {\n    onClick: () => AxiosRequest(\"id\"),\n    title: \"Id\",\n    sortVisibility: IdSort,\n    onClickOfSort: () => {\n      setSizeSort(false);\n      setPrizeSort(false);\n      setIdSort(true);\n      AxiosRequest(\"id\");\n      setFilterState(!FilterState);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }), \" \", /*#__PURE__*/React.createElement(Sort, {\n    onClick: () => AxiosRequest(\"price\"),\n    title: \"Prize\",\n    sortVisibility: PrizeSort,\n    onClickOfSort: () => {\n      setSizeSort(false);\n      setPrizeSort(true);\n      setIdSort(false);\n      AxiosRequest(\"price\");\n      setFilterState(!FilterState);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Sort, {\n    title: \"Sort\",\n    sortVisibility: SizeSort,\n    onClickOfSort: () => {\n      setSizeSort(true);\n      setPrizeSort(false);\n      setIdSort(false);\n      AxiosRequest(\"size\");\n      setFilterState(!FilterState);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }), \" \")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setFullArrayOfProducts: FullArrayOfProducts => dispatch(setFullArrayOfProducts(FullArrayOfProducts)),\n  setDisplayedArrayOfProducts: DisplayedArrayOfProducts => dispatch(setDisplayedArrayOfProducts(DisplayedArrayOfProducts)),\n  toggleSpinner: () => dispatch(toggleSpinner()),\n  setValueByName: NameValue => dispatch(setValueByName(NameValue))\n});\n\nexport default connect(null, mapDispatchToProps)(Filter);","map":{"version":3,"sources":["C:/Users/asjan/Desktop/Creatella/src/components/Filter/Filter.component.jsx"],"names":["React","useState","FontAwesomeIcon","faFilter","Sort","axios","connect","setFullArrayOfProducts","setDisplayedArrayOfProducts","setValueByName","toggleSpinner","Filter","FilterState","setFilterState","SizeSort","setSizeSort","PrizeSort","setPrizeSort","IdSort","setIdSort","AxiosRequest","ItemToSort","getData","ContrFunc","Functions","products","props","_sort","_limit","then","response","data","slice","name","value","fontSize","margin","mapDispatchToProps","dispatch","FullArrayOfProducts","DisplayedArrayOfProducts","NameValue"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Filter.styles.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { faFilter } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Sort from \"../Sort/Sort.component\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setFullArrayOfProducts,\r\n  setDisplayedArrayOfProducts,\r\n  setValueByName,\r\n} from \"../../redux/Shop/Shop.actions\";\r\nimport { toggleSpinner } from \"../../redux/Spinner/Spinner.actions\";\r\n\r\nconst Filter = ({\r\n  setFullArrayOfProducts,\r\n  setDisplayedArrayOfProducts,\r\n  setValueByName,\r\n  toggleSpinner,\r\n}) => {\r\n  const [FilterState, setFilterState] = useState(false);\r\n  const [SizeSort, setSizeSort] = useState(false);\r\n\r\n  const [PrizeSort, setPrizeSort] = useState(false);\r\n  const [IdSort, setIdSort] = useState(false);\r\n  const AxiosRequest = async (ItemToSort) => {\r\n    await toggleSpinner();\r\n    await getData(ContrFunc.Functions.products, this.props.toggleSpinner, {\r\n      _sort: ItemToSort,\r\n      _limit: 80,\r\n    }).then((response) => {\r\n      setFullArrayOfProducts(response.data);\r\n      setDisplayedArrayOfProducts(response.data.slice(0, 20));\r\n\r\n      setValueByName({ name: \"Index\", value: 20 });\r\n      setValueByName({ name: \"LoadingMore\", value: false });\r\n    });\r\n    await toggleSpinner();\r\n    await getData(ContrFunc.Functions.products, this.props.toggleSpinner, {\r\n      _sort: ItemToSort,\r\n    }).then((response) => {\r\n      setFullArrayOfProducts(response.data);\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      {FilterState === false ? (\r\n        <div className=\"Filtering\" onClick={() => setFilterState(!FilterState)}>\r\n          Filters\r\n          <FontAwesomeIcon\r\n            icon={faFilter}\r\n            className=\"icon\"\r\n            color=\"#413b3b\"\r\n          ></FontAwesomeIcon>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div\r\n            className=\"Filtering\"\r\n            onClick={() => setFilterState(!FilterState)}\r\n          >\r\n            Filters\r\n            <FontAwesomeIcon\r\n              icon={faFilter}\r\n              className=\"icon\"\r\n              color=\"#413b3b\"\r\n            ></FontAwesomeIcon>\r\n          </div>\r\n          <div className=\"SortOption\">\r\n            <div style={{ fontSize: \"1.4vw\", margin: \"1vh 1vw\" }}>\r\n              {\" \"}\r\n              <b>Sort by: </b>\r\n            </div>\r\n            <Sort\r\n              onClick={() => AxiosRequest(\"id\")}\r\n              title=\"Id\"\r\n              sortVisibility={IdSort}\r\n              onClickOfSort={() => {\r\n                setSizeSort(false);\r\n                setPrizeSort(false);\r\n                setIdSort(true);\r\n                AxiosRequest(\"id\");\r\n                setFilterState(!FilterState);\r\n              }}\r\n            />{\" \"}\r\n            <Sort\r\n              onClick={() => AxiosRequest(\"price\")}\r\n              title=\"Prize\"\r\n              sortVisibility={PrizeSort}\r\n              onClickOfSort={() => {\r\n                setSizeSort(false);\r\n                setPrizeSort(true);\r\n                setIdSort(false);\r\n                AxiosRequest(\"price\");\r\n                setFilterState(!FilterState);\r\n              }}\r\n            />\r\n            <Sort\r\n              title=\"Sort\"\r\n              sortVisibility={SizeSort}\r\n              onClickOfSort={() => {\r\n                setSizeSort(true);\r\n                setPrizeSort(false);\r\n                setIdSort(false);\r\n                AxiosRequest(\"size\");\r\n                setFilterState(!FilterState);\r\n              }}\r\n            />{\" \"}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setFullArrayOfProducts: (FullArrayOfProducts) =>\r\n    dispatch(setFullArrayOfProducts(FullArrayOfProducts)),\r\n  setDisplayedArrayOfProducts: (DisplayedArrayOfProducts) =>\r\n    dispatch(setDisplayedArrayOfProducts(DisplayedArrayOfProducts)),\r\n  toggleSpinner: () => dispatch(toggleSpinner()),\r\n  setValueByName: (NameValue) => dispatch(setValueByName(NameValue)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Filter);\r\n"]},"metadata":{},"sourceType":"module"}