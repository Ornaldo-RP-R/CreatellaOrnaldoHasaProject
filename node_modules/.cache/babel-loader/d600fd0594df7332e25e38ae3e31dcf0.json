{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asjan\\\\Desktop\\\\Creatella\\\\src\\\\App.jsx\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { connect } from \"react-redux\";\nimport { setFullArrayOfProducts, setDisplayedArrayOfProducts, setValueByName } from \"./redux/Shop/Shop.actions\";\nimport Filter from \"./components/Filter/Filter.component\";\nimport { toggleSpinner } from \"./redux/Spinner/Spinner.actions\";\nimport { setViewOfPage } from \"./redux/Page/Page.actions\";\nimport ProductScrollView from \"./components/ProductScrollView/ProductScrollView.component\";\nimport ProducdPaginationView from \"./components/ProductPaginationView/ProductPaginationView.component\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.GetProducts = async () => {\n      //run Spinner\n      await this.props.toggleSpinner(); //start Api call\n\n      await axios.get(\"http://localhost:5000/products/?_pages=1&_limit=80\").then(response => {\n        //register  80 products to redux (80 becouse no need more for start and load faster)\n        this.props.setFullArrayOfProducts(response.data); // register products that we need to display to the user\n\n        this.props.setDisplayedArrayOfProducts(response.data.slice(0, 20)); //set Index to redux a variable that i use to keep truck of the product number shown to user\n\n        this.props.setValueByName({\n          name: \"Index\",\n          value: 20\n        });\n      }); //close spinner\n\n      await this.props.toggleSpinner(); // while user uses the pages full products will be registered not only (80)\n\n      axios.get(\"http://localhost:5000/products\").then(response => {\n        this.props.setFullArrayOfProducts(response.data);\n      });\n    };\n  }\n\n  componentDidMount() {\n    //Call function to get products when components load\n    this.GetProducts();\n  } //Handle Scrolling  to give more products\n\n\n  render() {\n    const {\n      ViewOfPage,\n      setViewOfPage\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter-Products-Header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Filter-Header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Filter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"SwitchView\",\n      onClick: setViewOfPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, ViewOfPage === \"Pagination\" ? \"Turn on Scrolling View\" : \"Turn on Pagination View\"), /*#__PURE__*/React.createElement(ProducdPaginationView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  ViewOfPage: state.page.ViewOfPage\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setFullArrayOfProducts: FullArrayOfProducts => dispatch(setFullArrayOfProducts(FullArrayOfProducts)),\n  setDisplayedArrayOfProducts: DisplayedArrayOfProducts => dispatch(setDisplayedArrayOfProducts(DisplayedArrayOfProducts)),\n  toggleSpinner: () => dispatch(toggleSpinner()),\n  setValueByName: NameValue => dispatch(setValueByName(NameValue)),\n  setViewOfPage: () => dispatch(setViewOfPage())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/asjan/Desktop/Creatella/src/App.jsx"],"names":["React","axios","connect","setFullArrayOfProducts","setDisplayedArrayOfProducts","setValueByName","Filter","toggleSpinner","setViewOfPage","ProductScrollView","ProducdPaginationView","App","Component","GetProducts","props","get","then","response","data","slice","name","value","componentDidMount","render","ViewOfPage","mapStateToProps","state","page","mapDispatchToProps","dispatch","FullArrayOfProducts","DisplayedArrayOfProducts","NameValue"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./App.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setFullArrayOfProducts,\r\n  setDisplayedArrayOfProducts,\r\n  setValueByName,\r\n} from \"./redux/Shop/Shop.actions\";\r\nimport Filter from \"./components/Filter/Filter.component\";\r\nimport { toggleSpinner } from \"./redux/Spinner/Spinner.actions\";\r\nimport { setViewOfPage } from \"./redux/Page/Page.actions\";\r\nimport ProductScrollView from \"./components/ProductScrollView/ProductScrollView.component\";\r\nimport ProducdPaginationView from \"./components/ProductPaginationView/ProductPaginationView.component\";\r\n\r\nclass App extends React.Component {\r\n  //Make Api call and get Products Info\r\n  GetProducts = async () => {\r\n    //run Spinner\r\n    await this.props.toggleSpinner();\r\n    //start Api call\r\n    await axios\r\n      .get(\"http://localhost:5000/products/?_pages=1&_limit=80\")\r\n      .then((response) => {\r\n        //register  80 products to redux (80 becouse no need more for start and load faster)\r\n        this.props.setFullArrayOfProducts(response.data);\r\n        // register products that we need to display to the user\r\n        this.props.setDisplayedArrayOfProducts(response.data.slice(0, 20));\r\n        //set Index to redux a variable that i use to keep truck of the product number shown to user\r\n        this.props.setValueByName({ name: \"Index\", value: 20 });\r\n      });\r\n    //close spinner\r\n    await this.props.toggleSpinner();\r\n    // while user uses the pages full products will be registered not only (80)\r\n    axios.get(\"http://localhost:5000/products\").then((response) => {\r\n      this.props.setFullArrayOfProducts(response.data);\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    //Call function to get products when components load\r\n    this.GetProducts();\r\n  }\r\n  //Handle Scrolling  to give more products\r\n\r\n  render() {\r\n    const { ViewOfPage, setViewOfPage } = this.props;\r\n    return (\r\n      <div className=\"filter-Products-Header\">\r\n        <div className=\"Filter-Header\">\r\n          <Filter />\r\n        </div>\r\n        <div className=\"SwitchView\" onClick={setViewOfPage}>\r\n          {ViewOfPage === \"Pagination\"\r\n            ? \"Turn on Scrolling View\"\r\n            : \"Turn on Pagination View\"}\r\n        </div>\r\n        <ProducdPaginationView />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  ViewOfPage: state.page.ViewOfPage,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setFullArrayOfProducts: (FullArrayOfProducts) =>\r\n    dispatch(setFullArrayOfProducts(FullArrayOfProducts)),\r\n  setDisplayedArrayOfProducts: (DisplayedArrayOfProducts) =>\r\n    dispatch(setDisplayedArrayOfProducts(DisplayedArrayOfProducts)),\r\n  toggleSpinner: () => dispatch(toggleSpinner()),\r\n  setValueByName: (NameValue) => dispatch(setValueByName(NameValue)),\r\n  setViewOfPage: () => dispatch(setViewOfPage()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n"]},"metadata":{},"sourceType":"module"}