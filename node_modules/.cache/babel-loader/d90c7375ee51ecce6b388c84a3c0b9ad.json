{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asjan\\\\Desktop\\\\Creatella\\\\src\\\\App.jsx\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { connect } from \"react-redux\";\nimport { setFullArrayOfProducts, setDisplayedArrayOfProducts, setValueByName } from \"./redux/Shop/Shop.actions\";\nimport Filter from \"./components/Filter/Filter.component\";\nimport { toggleSpinner } from \"./redux/Spinner/Spinner.actions\";\nimport Spinner from \"./components/Spinner/spinner.component\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.GetProducts = async () => {\n      await this.props.toggleSpinner();\n      await axios.get(\"http://localhost:5000/products/?_pages=1&_limit=80\").then(response => {\n        this.props.setFullArrayOfProducts(response.data);\n        this.props.setDisplayedArrayOfProducts(response.data.slice(0, 20));\n        this.props.setValueByName({\n          name: \"Index\",\n          value: 20\n        });\n      });\n      await this.props.toggleSpinner();\n      axios.get(\"http://localhost:5000/products\").then(response => {\n        this.props.setFullArrayOfProducts(response.data);\n      });\n    };\n\n    this.handleScroll = async e => {\n      const {\n        Index,\n        setDisplayedArrayOfProducts,\n        DisplayedProductsArray,\n        ProductsFullArray\n      } = this.props;\n\n      if (e.target.scrollHeight - e.target.scrollTop === e.target.clientHeight && Index <= 481) {\n        await this.props.setValueByName({\n          name: \"LoadingMore\",\n          value: true\n        });\n        await setTimeout(async () => {\n          await setDisplayedArrayOfProducts(DisplayedProductsArray.concat(ProductsFullArray.slice(Index, Index + 20)));\n          await this.props.setValueByName({\n            name: \"Index\",\n            value: Index + 20\n          });\n          await this.props.setValueByName({\n            name: \"LoadingMore\",\n            value: false\n          });\n\n          if (Index <= ProductsFullArray.length && Index >= ProductsFullArray.length - 20) {\n            setDisplayedArrayOfProducts(ProductsFullArray);\n          }\n        }, 300);\n      }\n    };\n  }\n\n  findCorrectDateFormat(productDate) {\n    let now = new Date();\n    let date = \"\";\n\n    if (now.getFullYear() === productDate.getFullYear() && now.getMonth() === productDate.getMonth() && now.getDate() - productDate.getDate() >= 7) {\n      if (now.getDate() - productDate.getDate() === 0) {\n        if (now.getHours() - productDate.getHours() === 0) {\n          if (now.getMinutes() - productDate.getMinutes() === 0) {\n            if (now.getSeconds() - productDate.getSeconds() != 0) {\n              return date = `${now.getSeconds() - productDate.getSeconds()} minutes ago`;\n            }\n          } else {\n            return date = `${now.getMinutes() - productDate.getMinutes()} minutes ago`;\n          }\n        } else {\n          return date = `${now.getHours() - productDate.getHours()} hours ago`;\n        }\n      } else {\n        return date = `${now.getDate() - productDate.getDate()} days ago`;\n      }\n    } else {\n      return date = \"since \" + productDate.getFullYear() + \"/\" + productDate.getMonth() + \"/\" + productDate.getDate();\n    }\n\n    return date;\n  }\n\n  componentDidMount() {\n    this.GetProducts();\n  }\n\n  render() {\n    const {\n      DisplayedProductsArray,\n      SpinnerVissibility,\n      LoadingMore,\n      Index,\n      ProductsFullArray\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter-Products-Header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Filter-Header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Filter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Products\",\n      onScroll: this.handleScroll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, SpinnerVissibility === true ? /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }) : DisplayedProductsArray.map(Product => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: Product.id,\n        className: \"Each-Product\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"face\",\n        style: {\n          fontSize: `${Product.size}px`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 19\n        }\n      }, Product.face), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"OrderNow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 19\n        }\n      }, \"Order now\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"price\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 19\n        }\n      }, \"$\", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }\n      }, ` ${Product.price}`)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 19\n        }\n      }, `${this.findCorrectDateFormat(new Date(Product.date))}`));\n    }), LoadingMore === true ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"LoadingMoreend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }, \"Loading ...\") : null, Index != 0 && Index === ProductsFullArray.length ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"LoadingMoreend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, \"end of catalogue\") : null), /*#__PURE__*/React.createElement(\"script\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }\n    }, \"document.write('\", /*#__PURE__*/React.createElement(\"img\", {\n      class: \"ad\",\n      src: \"/ads/?r=' + Math.floor(Math.random()*1000) + '\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }\n    }), \"');\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  DisplayedProductsArray: state.shop.DisplayedProductsArray,\n  ProductsFullArray: state.shop.ProductsFullArray,\n  Index: state.shop.Index,\n  LoadingMore: state.shop.LoadingMore,\n  SpinnerVissibility: state.spinner.SpinnerVissibility,\n  NoMoreToShow: state.shop.NoMoreToShow\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setFullArrayOfProducts: FullArrayOfProducts => dispatch(setFullArrayOfProducts(FullArrayOfProducts)),\n  setDisplayedArrayOfProducts: DisplayedArrayOfProducts => dispatch(setDisplayedArrayOfProducts(DisplayedArrayOfProducts)),\n  toggleSpinner: () => dispatch(toggleSpinner()),\n  setValueByName: NameValue => dispatch(setValueByName(NameValue))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/asjan/Desktop/Creatella/src/App.jsx"],"names":["React","axios","connect","setFullArrayOfProducts","setDisplayedArrayOfProducts","setValueByName","Filter","toggleSpinner","Spinner","App","Component","GetProducts","props","get","then","response","data","slice","name","value","handleScroll","e","Index","DisplayedProductsArray","ProductsFullArray","target","scrollHeight","scrollTop","clientHeight","setTimeout","concat","length","findCorrectDateFormat","productDate","now","Date","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","componentDidMount","render","SpinnerVissibility","LoadingMore","map","Product","id","fontSize","size","face","color","price","mapStateToProps","state","shop","spinner","NoMoreToShow","mapDispatchToProps","dispatch","FullArrayOfProducts","DisplayedArrayOfProducts","NameValue"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,sBADF,EAEEC,2BAFF,EAGEC,cAHF,QAIO,2BAJP;AAKA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,SAASC,aAAT,QAA8B,iCAA9B;AACA,OAAOC,OAAP,MAAoB,wCAApB;;AACA,MAAMC,GAAN,SAAkBT,KAAK,CAACU,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAyChCC,WAzCgC,GAyClB,YAAY;AACxB,YAAM,KAAKC,KAAL,CAAWL,aAAX,EAAN;AACA,YAAMN,KAAK,CACRY,GADG,CACC,oDADD,EAEHC,IAFG,CAEGC,QAAD,IAAc;AAClB,aAAKH,KAAL,CAAWT,sBAAX,CAAkCY,QAAQ,CAACC,IAA3C;AACA,aAAKJ,KAAL,CAAWR,2BAAX,CAAuCW,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoB,CAApB,EAAuB,EAAvB,CAAvC;AAEA,aAAKL,KAAL,CAAWP,cAAX,CAA0B;AAAEa,UAAAA,IAAI,EAAE,OAAR;AAAiBC,UAAAA,KAAK,EAAE;AAAxB,SAA1B;AACD,OAPG,CAAN;AAQA,YAAM,KAAKP,KAAL,CAAWL,aAAX,EAAN;AAEAN,MAAAA,KAAK,CAACY,GAAN,CAAU,gCAAV,EAA4CC,IAA5C,CAAkDC,QAAD,IAAc;AAC7D,aAAKH,KAAL,CAAWT,sBAAX,CAAkCY,QAAQ,CAACC,IAA3C;AACD,OAFD;AAGD,KAxD+B;;AAAA,SA4DhCI,YA5DgC,GA4DjB,MAAOC,CAAP,IAAa;AAC1B,YAAM;AACJC,QAAAA,KADI;AAEJlB,QAAAA,2BAFI;AAGJmB,QAAAA,sBAHI;AAIJC,QAAAA;AAJI,UAKF,KAAKZ,KALT;;AAOA,UACES,CAAC,CAACI,MAAF,CAASC,YAAT,GAAwBL,CAAC,CAACI,MAAF,CAASE,SAAjC,KAA+CN,CAAC,CAACI,MAAF,CAASG,YAAxD,IACAN,KAAK,IAAI,GAFX,EAGE;AACA,cAAM,KAAKV,KAAL,CAAWP,cAAX,CAA0B;AAC9Ba,UAAAA,IAAI,EAAE,aADwB;AAE9BC,UAAAA,KAAK,EAAE;AAFuB,SAA1B,CAAN;AAIA,cAAMU,UAAU,CAAC,YAAY;AAC3B,gBAAMzB,2BAA2B,CAC/BmB,sBAAsB,CAACO,MAAvB,CACEN,iBAAiB,CAACP,KAAlB,CAAwBK,KAAxB,EAA+BA,KAAK,GAAG,EAAvC,CADF,CAD+B,CAAjC;AAMA,gBAAM,KAAKV,KAAL,CAAWP,cAAX,CAA0B;AAC9Ba,YAAAA,IAAI,EAAE,OADwB;AAE9BC,YAAAA,KAAK,EAAEG,KAAK,GAAG;AAFe,WAA1B,CAAN;AAIA,gBAAM,KAAKV,KAAL,CAAWP,cAAX,CAA0B;AAC9Ba,YAAAA,IAAI,EAAE,aADwB;AAE9BC,YAAAA,KAAK,EAAE;AAFuB,WAA1B,CAAN;;AAIA,cACEG,KAAK,IAAIE,iBAAiB,CAACO,MAA3B,IACAT,KAAK,IAAIE,iBAAiB,CAACO,MAAlB,GAA2B,EAFtC,EAGE;AACA3B,YAAAA,2BAA2B,CAACoB,iBAAD,CAA3B;AACD;AACF,SArBe,EAqBb,GArBa,CAAhB;AAsBD;AACF,KAnG+B;AAAA;;AAChCQ,EAAAA,qBAAqB,CAACC,WAAD,EAAc;AACjC,QAAIC,GAAG,GAAG,IAAIC,IAAJ,EAAV;AACA,QAAIC,IAAI,GAAG,EAAX;;AACA,QACEF,GAAG,CAACG,WAAJ,OAAsBJ,WAAW,CAACI,WAAZ,EAAtB,IACAH,GAAG,CAACI,QAAJ,OAAmBL,WAAW,CAACK,QAAZ,EADnB,IAEAJ,GAAG,CAACK,OAAJ,KAAgBN,WAAW,CAACM,OAAZ,EAAhB,IAAyC,CAH3C,EAIE;AACA,UAAIL,GAAG,CAACK,OAAJ,KAAgBN,WAAW,CAACM,OAAZ,EAAhB,KAA0C,CAA9C,EAAiD;AAC/C,YAAIL,GAAG,CAACM,QAAJ,KAAiBP,WAAW,CAACO,QAAZ,EAAjB,KAA4C,CAAhD,EAAmD;AACjD,cAAIN,GAAG,CAACO,UAAJ,KAAmBR,WAAW,CAACQ,UAAZ,EAAnB,KAAgD,CAApD,EAAuD;AACrD,gBAAIP,GAAG,CAACQ,UAAJ,KAAmBT,WAAW,CAACS,UAAZ,EAAnB,IAA+C,CAAnD,EAAsD;AACpD,qBAAQN,IAAI,GAAI,GACdF,GAAG,CAACQ,UAAJ,KAAmBT,WAAW,CAACS,UAAZ,EACpB,cAFD;AAGD;AACF,WAND,MAMO;AACL,mBAAQN,IAAI,GAAI,GACdF,GAAG,CAACO,UAAJ,KAAmBR,WAAW,CAACQ,UAAZ,EACpB,cAFD;AAGD;AACF,SAZD,MAYO;AACL,iBAAQL,IAAI,GAAI,GACdF,GAAG,CAACM,QAAJ,KAAiBP,WAAW,CAACO,QAAZ,EAClB,YAFD;AAGD;AACF,OAlBD,MAkBO;AACL,eAAQJ,IAAI,GAAI,GAAEF,GAAG,CAACK,OAAJ,KAAgBN,WAAW,CAACM,OAAZ,EAAsB,WAAxD;AACD;AACF,KA1BD,MA0BO;AACL,aAAQH,IAAI,GACV,WACAH,WAAW,CAACI,WAAZ,EADA,GAEA,GAFA,GAGAJ,WAAW,CAACK,QAAZ,EAHA,GAIA,GAJA,GAKAL,WAAW,CAACM,OAAZ,EANF;AAOD;;AACD,WAAOH,IAAP;AACD;;AAiBDO,EAAAA,iBAAiB,GAAG;AAClB,SAAKhC,WAAL;AACD;;AAyCDiC,EAAAA,MAAM,GAAG;AACP,UAAM;AACJrB,MAAAA,sBADI;AAEJsB,MAAAA,kBAFI;AAGJC,MAAAA,WAHI;AAIJxB,MAAAA,KAJI;AAKJE,MAAAA;AALI,QAMF,KAAKZ,KANT;AAOA,wBACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAKE;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,QAAQ,EAAE,KAAKQ,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGyB,kBAAkB,KAAK,IAAvB,gBACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAGCtB,sBAAsB,CAACwB,GAAvB,CAA4BC,OAAD,IAAa;AACtC,0BACE;AAAK,QAAA,EAAE,EAAEA,OAAO,CAACC,EAAjB;AAAqB,QAAA,SAAS,EAAC,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,SAAS,EAAC,MADZ;AAEE,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAG,GAAEF,OAAO,CAACG,IAAK;AAA5B,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIGH,OAAO,CAACI,IAJX,CADF,eAOE;AAAQ,QAAA,SAAS,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPF,eAQE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEE;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEG,IAAGL,OAAO,CAACM,KAAM,EAFpB,CAFF,CARF,eAcE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,GAAE,KAAKtB,qBAAL,CAA2B,IAAIG,IAAJ,CAASa,OAAO,CAACZ,IAAjB,CAA3B,CAAmD,EADzD,CAdF,CADF;AAoBD,KArBD,CAJJ,EA2BGU,WAAW,KAAK,IAAhB,gBACC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,GAEG,IA7BN,EA8BGxB,KAAK,IAAI,CAAT,IAAcA,KAAK,KAAKE,iBAAiB,CAACO,MAA1C,gBACC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADD,GAEG,IAhCN,CALF,eAuCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAEE;AACE,MAAA,KAAK,EAAC,IADR;AAEE,MAAA,GAAG,EAAC,gDAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,QAvCF,CADF;AAkDD;;AA9J+B;;AAgKlC,MAAMwB,eAAe,GAAIC,KAAD,KAAY;AAClCjC,EAAAA,sBAAsB,EAAEiC,KAAK,CAACC,IAAN,CAAWlC,sBADD;AAElCC,EAAAA,iBAAiB,EAAEgC,KAAK,CAACC,IAAN,CAAWjC,iBAFI;AAGlCF,EAAAA,KAAK,EAAEkC,KAAK,CAACC,IAAN,CAAWnC,KAHgB;AAIlCwB,EAAAA,WAAW,EAAEU,KAAK,CAACC,IAAN,CAAWX,WAJU;AAKlCD,EAAAA,kBAAkB,EAAEW,KAAK,CAACE,OAAN,CAAcb,kBALA;AAMlCc,EAAAA,YAAY,EAAEH,KAAK,CAACC,IAAN,CAAWE;AANS,CAAZ,CAAxB;;AAQA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxC1D,EAAAA,sBAAsB,EAAG2D,mBAAD,IACtBD,QAAQ,CAAC1D,sBAAsB,CAAC2D,mBAAD,CAAvB,CAF8B;AAGxC1D,EAAAA,2BAA2B,EAAG2D,wBAAD,IAC3BF,QAAQ,CAACzD,2BAA2B,CAAC2D,wBAAD,CAA5B,CAJ8B;AAKxCxD,EAAAA,aAAa,EAAE,MAAMsD,QAAQ,CAACtD,aAAa,EAAd,CALW;AAMxCF,EAAAA,cAAc,EAAG2D,SAAD,IAAeH,QAAQ,CAACxD,cAAc,CAAC2D,SAAD,CAAf;AANC,CAAf,CAA3B;;AASA,eAAe9D,OAAO,CAACqD,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CnD,GAA7C,CAAf","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./App.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setFullArrayOfProducts,\r\n  setDisplayedArrayOfProducts,\r\n  setValueByName,\r\n} from \"./redux/Shop/Shop.actions\";\r\nimport Filter from \"./components/Filter/Filter.component\";\r\nimport { toggleSpinner } from \"./redux/Spinner/Spinner.actions\";\r\nimport Spinner from \"./components/Spinner/spinner.component\";\r\nclass App extends React.Component {\r\n  findCorrectDateFormat(productDate) {\r\n    let now = new Date();\r\n    let date = \"\";\r\n    if (\r\n      now.getFullYear() === productDate.getFullYear() &&\r\n      now.getMonth() === productDate.getMonth() &&\r\n      now.getDate() - productDate.getDate() >= 7\r\n    ) {\r\n      if (now.getDate() - productDate.getDate() === 0) {\r\n        if (now.getHours() - productDate.getHours() === 0) {\r\n          if (now.getMinutes() - productDate.getMinutes() === 0) {\r\n            if (now.getSeconds() - productDate.getSeconds() != 0) {\r\n              return (date = `${\r\n                now.getSeconds() - productDate.getSeconds()\r\n              } minutes ago`);\r\n            }\r\n          } else {\r\n            return (date = `${\r\n              now.getMinutes() - productDate.getMinutes()\r\n            } minutes ago`);\r\n          }\r\n        } else {\r\n          return (date = `${\r\n            now.getHours() - productDate.getHours()\r\n          } hours ago`);\r\n        }\r\n      } else {\r\n        return (date = `${now.getDate() - productDate.getDate()} days ago`);\r\n      }\r\n    } else {\r\n      return (date =\r\n        \"since \" +\r\n        productDate.getFullYear() +\r\n        \"/\" +\r\n        productDate.getMonth() +\r\n        \"/\" +\r\n        productDate.getDate());\r\n    }\r\n    return date;\r\n  }\r\n  GetProducts = async () => {\r\n    await this.props.toggleSpinner();\r\n    await axios\r\n      .get(\"http://localhost:5000/products/?_pages=1&_limit=80\")\r\n      .then((response) => {\r\n        this.props.setFullArrayOfProducts(response.data);\r\n        this.props.setDisplayedArrayOfProducts(response.data.slice(0, 20));\r\n\r\n        this.props.setValueByName({ name: \"Index\", value: 20 });\r\n      });\r\n    await this.props.toggleSpinner();\r\n\r\n    axios.get(\"http://localhost:5000/products\").then((response) => {\r\n      this.props.setFullArrayOfProducts(response.data);\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.GetProducts();\r\n  }\r\n  handleScroll = async (e) => {\r\n    const {\r\n      Index,\r\n      setDisplayedArrayOfProducts,\r\n      DisplayedProductsArray,\r\n      ProductsFullArray,\r\n    } = this.props;\r\n\r\n    if (\r\n      e.target.scrollHeight - e.target.scrollTop === e.target.clientHeight &&\r\n      Index <= 481\r\n    ) {\r\n      await this.props.setValueByName({\r\n        name: \"LoadingMore\",\r\n        value: true,\r\n      });\r\n      await setTimeout(async () => {\r\n        await setDisplayedArrayOfProducts(\r\n          DisplayedProductsArray.concat(\r\n            ProductsFullArray.slice(Index, Index + 20)\r\n          )\r\n        );\r\n\r\n        await this.props.setValueByName({\r\n          name: \"Index\",\r\n          value: Index + 20,\r\n        });\r\n        await this.props.setValueByName({\r\n          name: \"LoadingMore\",\r\n          value: false,\r\n        });\r\n        if (\r\n          Index <= ProductsFullArray.length &&\r\n          Index >= ProductsFullArray.length - 20\r\n        ) {\r\n          setDisplayedArrayOfProducts(ProductsFullArray);\r\n        }\r\n      }, 300);\r\n    }\r\n  };\r\n  render() {\r\n    const {\r\n      DisplayedProductsArray,\r\n      SpinnerVissibility,\r\n      LoadingMore,\r\n      Index,\r\n      ProductsFullArray,\r\n    } = this.props;\r\n    return (\r\n      <div className=\"filter-Products-Header\">\r\n        <div className=\"Filter-Header\">\r\n          <Filter />\r\n        </div>\r\n\r\n        <div className=\"Products\" onScroll={this.handleScroll}>\r\n          {SpinnerVissibility === true ? (\r\n            <Spinner></Spinner>\r\n          ) : (\r\n            DisplayedProductsArray.map((Product) => {\r\n              return (\r\n                <div id={Product.id} className=\"Each-Product\">\r\n                  <span\r\n                    className=\"face\"\r\n                    style={{ fontSize: `${Product.size}px` }}\r\n                  >\r\n                    {Product.face}\r\n                  </span>\r\n                  <button className=\"OrderNow\">Order now</button>\r\n                  <div className=\"price\">\r\n                    $\r\n                    <span\r\n                      style={{ color: \"black\" }}\r\n                    >{` ${Product.price}`}</span>\r\n                  </div>\r\n                  <div className=\"date\">\r\n                    {`${this.findCorrectDateFormat(new Date(Product.date))}`}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          )}\r\n          {LoadingMore === true ? (\r\n            <div className=\"LoadingMoreend\">Loading ...</div>\r\n          ) : null}\r\n          {Index != 0 && Index === ProductsFullArray.length ? (\r\n            <div className=\"LoadingMoreend\">end of catalogue</div>\r\n          ) : null}\r\n        </div>\r\n        <script>\r\n          document.write('\r\n          <img\r\n            class=\"ad\"\r\n            src=\"/ads/?r=' + Math.floor(Math.random()*1000) + '\"\r\n          />\r\n          ');\r\n        </script>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  DisplayedProductsArray: state.shop.DisplayedProductsArray,\r\n  ProductsFullArray: state.shop.ProductsFullArray,\r\n  Index: state.shop.Index,\r\n  LoadingMore: state.shop.LoadingMore,\r\n  SpinnerVissibility: state.spinner.SpinnerVissibility,\r\n  NoMoreToShow: state.shop.NoMoreToShow,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setFullArrayOfProducts: (FullArrayOfProducts) =>\r\n    dispatch(setFullArrayOfProducts(FullArrayOfProducts)),\r\n  setDisplayedArrayOfProducts: (DisplayedArrayOfProducts) =>\r\n    dispatch(setDisplayedArrayOfProducts(DisplayedArrayOfProducts)),\r\n  toggleSpinner: () => dispatch(toggleSpinner()),\r\n  setValueByName: (NameValue) => dispatch(setValueByName(NameValue)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n"]},"metadata":{},"sourceType":"module"}