{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asjan\\\\Desktop\\\\Creatella\\\\src\\\\App.jsx\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShoppingCart, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { setFullArrayOfProducts, setDisplayedArrayOfProducts, setValueByName } from \"./redux/Shop/Shop.actions\";\nimport { getData, ContrFunc } from \"./api/AxiosHelperFunctions\";\nimport Filter from \"./components/Filter/Filter.component\";\nimport { toggleSpinner } from \"./redux/Spinner/Spinner.actions\";\nimport { setViewOfPage } from \"./redux/Page/Page.actions\";\nimport ProductScrollView from \"./components/ProductScrollView/ProductScrollView.component\";\nimport ProducdPaginationView from \"./components/ProductPaginationView/ProductPaginationView.component\";\nimport UserLoggedDropdown from \"./components/UserLoggedDropdown/UserLoggedDropdown.component\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.GetProducts = async () => {\n      //start Api call\n      await getData(ContrFunc.Functions.products, this.props.toggleSpinner, {\n        _pages: 1,\n        _limit: 80\n      }).then(response => {\n        //register  80 products to redux (80 becouse no need more for start and load faster)\n        this.props.setFullArrayOfProducts(response.data); // register products that we need to display to the user\n\n        this.props.setDisplayedArrayOfProducts(response.data.slice(0, 20)); //set Index to redux a variable that i use to keep truck of the product number shown to user\n\n        this.props.setValueByName({\n          name: \"Index\",\n          value: 20\n        });\n      });\n      await this.props.toggleSpinner(); // while user uses the pages full products will be registered not only (80)\n\n      await getData(ContrFunc.Functions.products, this.props.toggleSpinner, null).then(response => {\n        this.props.setFullArrayOfProducts(response.data);\n      });\n      await this.props.toggleSpinner();\n    };\n  }\n\n  componentDidMount() {\n    //Call function to get products when components load\n    this.GetProducts();\n  } //Handle Scrolling  to give more products\n\n\n  render() {\n    const {\n      ViewOfPage,\n      setViewOfPage\n    } = this.props;\n    const [UserDropdown, setUserDropdown] = useState(false);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"PositionComponents\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Filter-Header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Filter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"SwitchView\",\n      onClick: setViewOfPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, ViewOfPage === \"Pagination\" ? \"Turn on Scrolling View\" : \"Turn on Pagination View\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Store ShopCart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faShoppingCart,\n      className: \"icon\",\n      color: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Store UserIcon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faUser,\n      className: \"icon\",\n      color: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, UserDropdown === true ? /*#__PURE__*/React.createElement(UserLoggedDropdown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 39\n      }\n    }) : null), ViewOfPage === \"Pagination\" ? /*#__PURE__*/React.createElement(ProducdPaginationView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(ProductScrollView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  ViewOfPage: state.page.ViewOfPage\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setFullArrayOfProducts: FullArrayOfProducts => dispatch(setFullArrayOfProducts(FullArrayOfProducts)),\n  setDisplayedArrayOfProducts: DisplayedArrayOfProducts => dispatch(setDisplayedArrayOfProducts(DisplayedArrayOfProducts)),\n  toggleSpinner: () => dispatch(toggleSpinner()),\n  setValueByName: NameValue => dispatch(setValueByName(NameValue)),\n  setViewOfPage: () => dispatch(setViewOfPage())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/asjan/Desktop/Creatella/src/App.jsx"],"names":["React","useState","connect","FontAwesomeIcon","faShoppingCart","faUser","setFullArrayOfProducts","setDisplayedArrayOfProducts","setValueByName","getData","ContrFunc","Filter","toggleSpinner","setViewOfPage","ProductScrollView","ProducdPaginationView","UserLoggedDropdown","App","Component","GetProducts","Functions","products","props","_pages","_limit","then","response","data","slice","name","value","componentDidMount","render","ViewOfPage","UserDropdown","setUserDropdown","mapStateToProps","state","page","mapDispatchToProps","dispatch","FullArrayOfProducts","DisplayedArrayOfProducts","NameValue"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faShoppingCart, faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  setFullArrayOfProducts,\r\n  setDisplayedArrayOfProducts,\r\n  setValueByName,\r\n} from \"./redux/Shop/Shop.actions\";\r\nimport { getData, ContrFunc } from \"./api/AxiosHelperFunctions\";\r\nimport Filter from \"./components/Filter/Filter.component\";\r\nimport { toggleSpinner } from \"./redux/Spinner/Spinner.actions\";\r\nimport { setViewOfPage } from \"./redux/Page/Page.actions\";\r\nimport ProductScrollView from \"./components/ProductScrollView/ProductScrollView.component\";\r\nimport ProducdPaginationView from \"./components/ProductPaginationView/ProductPaginationView.component\";\r\nimport UserLoggedDropdown from \"./components/UserLoggedDropdown/UserLoggedDropdown.component\";\r\n\r\nclass App extends React.Component {\r\n  //Make Api call and get Products Info\r\n  GetProducts = async () => {\r\n    //start Api call\r\n    await getData(ContrFunc.Functions.products, this.props.toggleSpinner, {\r\n      _pages: 1,\r\n      _limit: 80,\r\n    }).then((response) => {\r\n      //register  80 products to redux (80 becouse no need more for start and load faster)\r\n      this.props.setFullArrayOfProducts(response.data);\r\n      // register products that we need to display to the user\r\n      this.props.setDisplayedArrayOfProducts(response.data.slice(0, 20));\r\n      //set Index to redux a variable that i use to keep truck of the product number shown to user\r\n      this.props.setValueByName({ name: \"Index\", value: 20 });\r\n    });\r\n    await this.props.toggleSpinner();\r\n    // while user uses the pages full products will be registered not only (80)\r\n    await getData(\r\n      ContrFunc.Functions.products,\r\n      this.props.toggleSpinner,\r\n      null\r\n    ).then((response) => {\r\n      this.props.setFullArrayOfProducts(response.data);\r\n    });\r\n    await this.props.toggleSpinner();\r\n  };\r\n  componentDidMount() {\r\n    //Call function to get products when components load\r\n    this.GetProducts();\r\n  }\r\n  //Handle Scrolling  to give more products\r\n\r\n  render() {\r\n    const { ViewOfPage, setViewOfPage } = this.props;\r\n    const [UserDropdown, setUserDropdown] = useState(false);\r\n    return (\r\n      <div className=\"PositionComponents\">\r\n        <div className=\"Filter-Header\">\r\n          <Filter />\r\n        </div>\r\n        <div className=\"SwitchView\" onClick={setViewOfPage}>\r\n          {ViewOfPage === \"Pagination\"\r\n            ? \"Turn on Scrolling View\"\r\n            : \"Turn on Pagination View\"}\r\n        </div>\r\n        <div className=\"Store ShopCart\">\r\n          <FontAwesomeIcon\r\n            icon={faShoppingCart}\r\n            className=\"icon\"\r\n            color=\"white\"\r\n          ></FontAwesomeIcon>\r\n        </div>\r\n        <div className=\"Store UserIcon\">\r\n          <FontAwesomeIcon\r\n            icon={faUser}\r\n            className=\"icon\"\r\n            color=\"white\"\r\n          ></FontAwesomeIcon>\r\n        </div>\r\n        <div>{UserDropdown === true ? <UserLoggedDropdown /> : null}</div>\r\n\r\n        {ViewOfPage === \"Pagination\" ? (\r\n          <ProducdPaginationView />\r\n        ) : (\r\n          <ProductScrollView />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  ViewOfPage: state.page.ViewOfPage,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setFullArrayOfProducts: (FullArrayOfProducts) =>\r\n    dispatch(setFullArrayOfProducts(FullArrayOfProducts)),\r\n  setDisplayedArrayOfProducts: (DisplayedArrayOfProducts) =>\r\n    dispatch(setDisplayedArrayOfProducts(DisplayedArrayOfProducts)),\r\n  toggleSpinner: () => dispatch(toggleSpinner()),\r\n  setValueByName: (NameValue) => dispatch(setValueByName(NameValue)),\r\n  setViewOfPage: () => dispatch(setViewOfPage()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n"]},"metadata":{},"sourceType":"module"}